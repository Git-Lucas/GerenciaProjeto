@model PaginatedList<GerenciaProjeto.Models.TarefaCliente>

@{
    int tamanhoCampos = 65;
}

<h1>@ViewData["Title"]</h1>

<div>
    <div class="float-left" style="vertical-align: top">
        <p>
            <a class="btn btn-primary btn-sm" asp-action="Criar">Nova Tarefa</a>
            <a class="btn btn-primary btn-sm" asp-action="TodasTarefas">Visualizar Todas as Tarefas</a>
        </p>
    </div>
    <div class="float-right">
        <form asp-action="Inicio" method="get" class="form-inline my-2 my-lg-0">
            <input name="pesquisa" value="@ViewData["pesquisa"]" class="form-control mr-sm-2" type="text" placeholder="Pesquisar" />
            <input class="btn btn-secondary my-2 my-sm-0" type="submit" value="Pesquisar" />
            <a class="btn btn-secondary my-2 my-sm-0" style="margin-left: 5px" asp-action="Inicio">Voltar à Lista Completa</a>
        </form>
    </div>
</div>

<table class="table table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Funcionario)
            </th>
            <th>
                <a style="color: #ffffff" asp-action="Inicio" asp-route-ordenarPor="empresa">
                    @Html.DisplayNameFor(model => model.First().Empresa) &#9662;
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Empresa.Telefone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Erro)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DataInicial)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="table-danger">
                <td>
                    @Html.DisplayFor(modelItem => item.Funcionario)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Empresa.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Empresa.Telefone)
                </td>
                <td>
                    @if (String.IsNullOrEmpty(item.Erro) || item.Erro.Length < tamanhoCampos)
                    {
                        @Html.DisplayFor(modelItem => item.Erro)
                    } else
                    {
                        var result = $"{item.Erro.Substring(0, tamanhoCampos)}...";
                        @result
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataInicial)
                </td>

                <td>
                    <a asp-action="Editar" asp-route-id="@item.Id">Editar</a> |
                    <a asp-action="Visualizar" asp-route-id="@item.Id">Visualizar</a> |
                    <a asp-action="Deletar" asp-route-id="@item.Id">Deletar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Inicio"
   asp-route-numeroPagina="@(Model.PageIndex - 1)"
   asp-route-pesquisa="@ViewData["pesquisa"]"
   asp-route-ordenarPor="@ViewData["ordenarPor"]"
   class="btn btn-secondary my-2 my-sm-0 @prevDisabled">
    Anterior
</a>
<a asp-action="Inicio"
   asp-route-numeroPagina="@(Model.PageIndex + 1)"
   asp-route-pesquisa="@ViewData["pesquisa"]"
   asp-route-ordenarPor="@ViewData["ordenarPor"]"
   class="btn btn-secondary my-2 my-sm-0 @nextDisabled">
    Próxima
</a>